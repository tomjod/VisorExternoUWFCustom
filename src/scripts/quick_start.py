#!/usr/bin/env python3
"""
Script de inicio r√°pido para la simulaci√≥n.
Proporciona un men√∫ interactivo para elegir c√≥mo ejecutar la simulaci√≥n.
"""

import subprocess
import sys
import os
from pathlib import Path

# Configuraci√≥n
SRC_DIR = Path(__file__).parent
MAIN_SCRIPT = SRC_DIR / "main.py"
SIMULATOR_SCRIPT = SRC_DIR / "simulator.py"
RUN_SIMULATION_SCRIPT = SRC_DIR / "run_simulation.py"

# Detectar SO
IS_LINUX = sys.platform.startswith("linux")
IS_MACOS = sys.platform == "darwin"
IS_WINDOWS = sys.platform == "win32"


def print_header():
    """Imprime el encabezado."""
    print("\n" + "=" * 60)
    print("üéØ VISOR CONTADORA GLORY - SIMULADOR")
    print("=" * 60 + "\n")


def print_menu():
    """Imprime el men√∫ de opciones."""
    print("Selecciona una opci√≥n:\n")
    print("1. üöÄ Ejecutar solo la aplicaci√≥n principal")
    print("2. üîÑ Ejecutar solo el simulador")
    print("3. üéØ Ejecutar ambos (requiere puertos virtuales)")
    print("4. üìñ Ver instrucciones")
    print("5. ‚ùå Salir\n")


def run_main_app():
    """Ejecuta la aplicaci√≥n principal."""
    print("\nüöÄ Iniciando aplicaci√≥n principal...\n")
    try:
        subprocess.run([sys.executable, str(MAIN_SCRIPT)], cwd=str(SRC_DIR))
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è  Aplicaci√≥n detenida por el usuario")
    except Exception as e:
        print(f"\n‚ùå Error: {e}")


def run_simulator():
    """Ejecuta el simulador."""
    print("\nüîÑ Iniciando simulador...\n")
    try:
        subprocess.run([sys.executable, str(SIMULATOR_SCRIPT)], cwd=str(SRC_DIR))
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è  Simulador detenido por el usuario")
    except Exception as e:
        print(f"\n‚ùå Error: {e}")


def run_both():
    """Ejecuta ambos programas."""
    if IS_WINDOWS:
        print("\n‚ö†Ô∏è  En Windows, debes ejecutar ambos en terminales separadas:")
        print("   Terminal 1: python src/main.py")
        print("   Terminal 2: python src/simulator.py")
        print("\nüí° Aseg√∫rate de que COM3 est√° disponible\n")
        return
    
    print("\nüéØ Ejecutando simulaci√≥n completa...\n")
    try:
        subprocess.run([sys.executable, str(RUN_SIMULATION_SCRIPT)], cwd=str(SRC_DIR))
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è  Simulaci√≥n detenida por el usuario")
    except FileNotFoundError:
        print("\n‚ùå Script de simulaci√≥n no encontrado")
        print("   Ejecuta ambos programas en terminales separadas:")
        print("   Terminal 1: python src/main.py")
        print("   Terminal 2: python src/simulator.py")
    except Exception as e:
        print(f"\n‚ùå Error: {e}")


def show_instructions():
    """Muestra las instrucciones."""
    print("\n" + "=" * 60)
    print("üìñ INSTRUCCIONES")
    print("=" * 60 + "\n")
    
    if IS_WINDOWS:
        print("WINDOWS:")
        print("-" * 60)
        print("1. Aseg√∫rate de que COM3 est√° disponible")
        print("2. Abre dos terminales")
        print("3. En la terminal 1, ejecuta: python src/main.py")
        print("4. En la terminal 2, ejecuta: python src/simulator.py")
        print("5. El simulador enviar√° los datos a la aplicaci√≥n\n")
    
    elif IS_LINUX or IS_MACOS:
        print("LINUX/macOS:")
        print("-" * 60)
        print("Opci√≥n 1: Puertos virtuales autom√°ticos")
        print("  1. Instala socat: sudo apt-get install socat (Linux)")
        print("  2. Ejecuta: python src/quick_start.py")
        print("  3. Selecciona opci√≥n 3\n")
        
        print("Opci√≥n 2: Ejecuci√≥n manual")
        print("  Terminal 1: socat -d -d pty,raw,echo=0,link=/tmp/COM3 pty,raw,echo=0,link=/tmp/COM4")
        print("  Terminal 2: python src/main.py")
        print("  Terminal 3: python src/simulator.py\n")
    
    print("=" * 60 + "\n")


def main():
    """Funci√≥n principal."""
    print_header()
    
    while True:
        print_menu()
        choice = input("Opci√≥n: ").strip()
        
        if choice == "1":
            run_main_app()
        elif choice == "2":
            run_simulator()
        elif choice == "3":
            run_both()
        elif choice == "4":
            show_instructions()
        elif choice == "5":
            print("\nüëã ¬°Hasta luego!\n")
            break
        else:
            print("\n‚ùå Opci√≥n no v√°lida\n")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nüëã ¬°Hasta luego!\n")
        sys.exit(0)

